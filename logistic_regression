#used for supervised learning 
#don't confuse with name as it takes the log of the prediction
#logistic Regression model which predicts the outcome as 0/1, True/False
#to improve this we can use regularisation, non-linear model, feature scaling
from sklearn import linear_model,datasets
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error,r2_score
import numpy as np
data = datasets.load_diabetes()
# print(len(data))
# print(np.newaxis)
print(data.data[0])
# print(data['data'][:,1].shape)
# print(data['data'][:,None,2])
new = data.data[:,np.newaxis,2]
# print(len(train_x))
train_x = new[:-20]
print(len(train_x))
test_x = new[-20:]
train_y = data.target[:-20]
test_y = data.target[-20:]            
model = linear_model.LogisticRegression(C=100,penalty='l2')
model.fit(train_x,train_y)
pred = model.predict(test_x)
plt.scatter(train_x,train_y)
plt.plot(test_x,pred)
plt.show()
print(pred)
